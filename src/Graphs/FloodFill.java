package src.Graphs;

public class FloodFill {
    private static void floodFill(char[][] grid, int m, int n, int i, int j, char prev, char color) {
        // base case - outside the boundaries
        if (i < 0 || j < 0 || i >= m || j >= n)
            return;

        // boundary of the figure
        if (grid[i][j] != prev)
            return;

        // coloring the figure
        grid[i][j] = color;

        // recursive calls
        floodFill(grid, m, n, i + 1, j, prev, color);
        floodFill(grid, m, n, i - 1, j, prev, color);
        floodFill(grid, m, n, i, j + 1, prev, color);
        floodFill(grid, m, n, i, j - 1, prev, color);
    }

    public static void main(String[] args) {
        char[][] grid = {
                {'`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`'},
                {'`', '`', '`', '`', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`', '`', '`', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`'},
                {'`', '`', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`'},
                {'`', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`', '$', '$', '$', '$', '`'},
                {'$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`', '$', '$', '$', '$'},
                {'$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '$', '$', '$', '$', '$'},
                {'$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '$', '$', '$', '$', '$', '`'},
                {'`', '`', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '`'},
                {'`', '`', '`', '`', '`', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`', '`'},
                {'`', '`', '`', '`', '`', '`', '`', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`', '`', '`'},
                {'`', '`', '`', '`', '`', '`', '`', '`', '`', '$', '$', '$', '$', '$', '$', '$', '$', '`', '`', '`', '`', '`', '`', '`', '`', '`'},
                {'`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '$', '$', '$', '$', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`'},
                {'`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`', '`'}
        };
        System.out.println("Picture Before Coloring is : \n");
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j < 26; j++)
                System.out.print(grid[i][j]);
            System.out.println();
        }
        floodFill(grid, 13, 26, 6, 6, '$', '|');
        System.out.println("Picture After Coloring is : \n");
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j < 26; j++)
                System.out.print(grid[i][j]);
            System.out.println();
        }
    }
}
